;
;
;

o<bot_vision2> sub
;	#1 head
;	#2 part type [optional]
;	#3 z offset during vision [optional]
;	#1910/#1920 part type
;	#1914/#1924 part thickness
; returns
;	#1000 - part type or 0 if failed
;	#1001,#1911/#1921 - dx
;	#1002,#1912/#1922 - dy
;	#1003,#1913/#1923 - angle
#1 = [round[#1]]
o1 if [ #1 eq 1 or #1 eq 2]
	g92.1			; turn off G92 offsets
	g10 l2 p2 x0 y0 z0 r0	; reset G55 offsets
	g55 g43 h#1		; select head

	o4 if [#2 eq 0]
		#2 = #[1900+#1*10]	; part type (bottom)
	o4 endif

	g0 z0

	o6 if [#1915 ne 0]
		m67 e1 q[-#1915]	; c-axis rotation
		#1915 = 0
	o6 endif
	o7 if [#1925 ne 0]
		m67 e2 q[-#1925]	; c-axis rotation
		#1925 = 0
	o7 endif

	g0 x#<_pnp_bv_x> y#<_pnp_bv_y>	; bottom cam
	m62 p10			; bot light on (sync)
	o2 if [ #1 eq 1 ]
		g0 z[#<_pnp_bv_z1> + #1914 + #3]	; part thickness
	o2 else
		g0 z[#<_pnp_bv_z2> - #1924 - #3]
	o2 endif

	m68 e0 q[-#2]		; set part type (negative for bottom vision) cv.part
	m68 e4 q#[1904+#1*10]	; set part thickness cv.h

	#[1901+#1*10] = 0	; dx
	#[1902+#1*10] = 0	; dy
	#[1903+#1*10] = 0	; a

	o5 do
;		g4 p0.2			; camera pipeline delay
		m68 e#1 q0		; reset c-axis rotation increment
		m64 p0			; enable vision
		m66 p0 l3 q#<_pnp_bv_to>	; wait for din-0 go high, 1 sec timeout
		m65 p0			; disable vision

		o3 if [#5399 le 0]	; timeout
			#1000 = 0
			#1001 = 0
			#1002 = 0
			#1003 = 0
			(xdebug, bot_vision2: timout)
			o5 break
		o3 else
			m66 e0 l0	; read result - package code if success
			#1000 = [#5399]
			m66 e1 l0	; read dx
			#1001 = [#5399]
			m66 e2 l0	; read dy
			#1002 = [-#5399]
			m66 e3 l0	; read a
			#1003 = [#5399 - 0.6]	; camera angle

	#<vx> = #<_pnp_bv_x>
	#<vy> = #<_pnp_bv_y>

	#<ox> = #1001
	#<oy> = #1002
	#<a> =  [#1003]
	#<dx> = [#<ox>*cos[#<a>]-#<oy>*sin[#<a>]]
	#<dy> = [#<ox>*sin[#<a>]+#<oy>*cos[#<a>]]
;	#<dx> = #<ox>
;	#<dy> = #<oy>

			; save compenation
			#[1901+#1*10] = [#[1901+#1*10] + #<dx>]	; dx
			#[1902+#1*10] = [#[1902+#1*10] + #<dy>]	; dy
			#[1903+#1*10] = 0	; a

			g0 x[#<vx>-#[1901+#1*10]] y[#<vy>-#[1902+#1*10]]	; bottom cam
			m68 e#1 q[-#<a>]

			(debug, bv2 delta #1001,#1002@#1003)
		o3 endif
	o5 while [[abs[#1001] gt 0.02] or [abs[#1002] gt 0.02] or [abs[#1003] gt 0.1]]
;	o5 while [0]

	#1001 = #[1901+#1*10] ; dx
	#1002 = #[1902+#1*10] ; dy
	#1003 = #[1903+#1*10] ; a

	(xdebug, bv2 #1001,#1002@#1003)

;m1
	m65 p10			; bot light off
	m68 e0 q0		; switch back to top camera
	m68 e1 q0	; reset rotation
	m68 e2 q0	; reset

;	g0 z0
o1 else
	(debug, bot_vision2: bad head #1)
	m2
o1 endif
o<bot_vision2> endsub
